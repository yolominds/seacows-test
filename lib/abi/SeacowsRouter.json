[
	{
		"inputs": [
			{
				"internalType": "contract ISeacowsPairFactoryLike",
				"name": "_factory",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [],
		"name": "factory",
		"outputs": [
			{
				"internalType": "contract ISeacowsPairFactoryLike",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "contract ERC20",
				"name": "token",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"internalType": "enum ISeacowsPairFactoryLike.PairVariant",
				"name": "variant",
				"type": "uint8"
			}
		],
		"name": "pairTransferERC20From",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "contract IERC721",
				"name": "nft",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "enum ISeacowsPairFactoryLike.PairVariant",
				"name": "variant",
				"type": "uint8"
			}
		],
		"name": "pairTransferNFTFrom",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "numItems",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapAny",
						"name": "swapInfo",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "maxCost",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairSwapAny[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "robustSwapERC20ForAnyNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific",
						"name": "swapInfo",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "maxCost",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairSwapSpecific[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "robustSwapERC20ForSpecificNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "contract SeacowsPair",
										"name": "pair",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "nftIds",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "groupId",
												"type": "uint256"
											},
											{
												"internalType": "bytes32[]",
												"name": "merkleProof",
												"type": "bytes32[]"
											}
										],
										"internalType": "struct SeacowsRouter.NFTDetail[]",
										"name": "details",
										"type": "tuple[]"
									}
								],
								"internalType": "struct SeacowsRouter.PairSwapSpecific",
								"name": "swapInfo",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "maxCost",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.RobustPairSwapSpecific[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"components": [
									{
										"internalType": "contract SeacowsPair",
										"name": "pair",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "nftIds",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "groupId",
												"type": "uint256"
											},
											{
												"internalType": "bytes32[]",
												"name": "merkleProof",
												"type": "bytes32[]"
											}
										],
										"internalType": "struct SeacowsRouter.NFTDetail[]",
										"name": "details",
										"type": "tuple[]"
									}
								],
								"internalType": "struct SeacowsRouter.PairSwapSpecific",
								"name": "swapInfo",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "minOutput",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.RobustPairSwapSpecificForToken[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "inputAmount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "tokenRecipient",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nftRecipient",
						"type": "address"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
				"name": "params",
				"type": "tuple"
			}
		],
		"name": "robustSwapERC20ForSpecificNFTsAndNFTsToToken",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "numItems",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapAny",
						"name": "swapInfo",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "maxCost",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairSwapAny[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "robustSwapETHForAnyNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific",
						"name": "swapInfo",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "maxCost",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairSwapSpecific[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "robustSwapETHForSpecificNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "contract SeacowsPair",
										"name": "pair",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "nftIds",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "groupId",
												"type": "uint256"
											},
											{
												"internalType": "bytes32[]",
												"name": "merkleProof",
												"type": "bytes32[]"
											}
										],
										"internalType": "struct SeacowsRouter.NFTDetail[]",
										"name": "details",
										"type": "tuple[]"
									}
								],
								"internalType": "struct SeacowsRouter.PairSwapSpecific",
								"name": "swapInfo",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "maxCost",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.RobustPairSwapSpecific[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"components": [
									{
										"internalType": "contract SeacowsPair",
										"name": "pair",
										"type": "address"
									},
									{
										"internalType": "uint256[]",
										"name": "nftIds",
										"type": "uint256[]"
									},
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "groupId",
												"type": "uint256"
											},
											{
												"internalType": "bytes32[]",
												"name": "merkleProof",
												"type": "bytes32[]"
											}
										],
										"internalType": "struct SeacowsRouter.NFTDetail[]",
										"name": "details",
										"type": "tuple[]"
									}
								],
								"internalType": "struct SeacowsRouter.PairSwapSpecific",
								"name": "swapInfo",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "minOutput",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.RobustPairSwapSpecificForToken[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "inputAmount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "tokenRecipient",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "nftRecipient",
						"type": "address"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
				"name": "params",
				"type": "tuple"
			}
		],
		"name": "robustSwapETHForSpecificNFTsAndNFTsToToken",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific",
						"name": "swapInfo",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "minOutput",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.RobustPairSwapSpecificForToken[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "address payable",
				"name": "tokenRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "robustSwapNFTsForToken",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "contract SeacowsPair",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "numItems",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.PairSwapAny[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapERC20ForAnyNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "contract SeacowsPair",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "nftIds",
						"type": "uint256[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "groupId",
								"type": "uint256"
							},
							{
								"internalType": "bytes32[]",
								"name": "merkleProof",
								"type": "bytes32[]"
							}
						],
						"internalType": "struct SeacowsRouter.NFTDetail[]",
						"name": "details",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapERC20ForSpecificNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "contract SeacowsPair",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "numItems",
						"type": "uint256"
					}
				],
				"internalType": "struct SeacowsRouter.PairSwapAny[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapETHForAnyNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "contract SeacowsPair",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "nftIds",
						"type": "uint256[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "groupId",
								"type": "uint256"
							},
							{
								"internalType": "bytes32[]",
								"name": "merkleProof",
								"type": "bytes32[]"
							}
						],
						"internalType": "struct SeacowsRouter.NFTDetail[]",
						"name": "details",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapETHForSpecificNFTs",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "remainingValue",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "numItems",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapAny[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.NFTsForAnyNFTsTrade",
				"name": "trade",
				"type": "tuple"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "minOutput",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapNFTsForAnyNFTsThroughERC20",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "numItems",
								"type": "uint256"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapAny[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.NFTsForAnyNFTsTrade",
				"name": "trade",
				"type": "tuple"
			},
			{
				"internalType": "uint256",
				"name": "minOutput",
				"type": "uint256"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapNFTsForAnyNFTsThroughETH",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.NFTsForSpecificNFTsTrade",
				"name": "trade",
				"type": "tuple"
			},
			{
				"internalType": "uint256",
				"name": "inputAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "minOutput",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapNFTsForSpecificNFTsThroughERC20",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "nftToTokenTrades",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "contract SeacowsPair",
								"name": "pair",
								"type": "address"
							},
							{
								"internalType": "uint256[]",
								"name": "nftIds",
								"type": "uint256[]"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "groupId",
										"type": "uint256"
									},
									{
										"internalType": "bytes32[]",
										"name": "merkleProof",
										"type": "bytes32[]"
									}
								],
								"internalType": "struct SeacowsRouter.NFTDetail[]",
								"name": "details",
								"type": "tuple[]"
							}
						],
						"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
						"name": "tokenToNFTTrades",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.NFTsForSpecificNFTsTrade",
				"name": "trade",
				"type": "tuple"
			},
			{
				"internalType": "uint256",
				"name": "minOutput",
				"type": "uint256"
			},
			{
				"internalType": "address payable",
				"name": "ethRecipient",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "nftRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapNFTsForSpecificNFTsThroughETH",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"components": [
					{
						"internalType": "contract SeacowsPair",
						"name": "pair",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "nftIds",
						"type": "uint256[]"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "groupId",
								"type": "uint256"
							},
							{
								"internalType": "bytes32[]",
								"name": "merkleProof",
								"type": "bytes32[]"
							}
						],
						"internalType": "struct SeacowsRouter.NFTDetail[]",
						"name": "details",
						"type": "tuple[]"
					}
				],
				"internalType": "struct SeacowsRouter.PairSwapSpecific[]",
				"name": "swapList",
				"type": "tuple[]"
			},
			{
				"internalType": "uint256",
				"name": "minOutput",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "tokenRecipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			}
		],
		"name": "swapNFTsForToken",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "outputAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"stateMutability": "payable",
		"type": "receive"
	}
]
